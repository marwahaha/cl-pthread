
(in-package :cl-pthread)

;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.3
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(defcfun ("pthread_create" #.(swig-lispify "pthread_create" 'function)) :int
  (thread :pointer)
  (attr :pointer)
  (start_routine :pointer)
  (arg :pointer))

(export '#.(swig-lispify "pthread_create" 'function))

(defcfun ("pthread_cancel" #.(swig-lispify "pthread_cancel" 'function)) :int
  (thread pthread))

(export '#.(swig-lispify "pthread_cancel" 'function))

(defcfun ("pthread_detach" #.(swig-lispify "pthread_detach" 'function)) :int
  (thread pthread))

(export '#.(swig-lispify "pthread_detach" 'function))

(defcfun ("pthread_equal" #.(swig-lispify "pthread_equal" 'function)) :int
  (t1 pthread)
  (t2 pthread))

(export '#.(swig-lispify "pthread_equal" 'function))

(defcfun ("pthread_exit" #.(swig-lispify "pthread_exit" 'function)) :void
  (value_ptr :pointer))

(export '#.(swig-lispify "pthread_exit" 'function))

(defcfun ("pthread_join" #.(swig-lispify "pthread_join" 'function)) :int
  (thread pthread)
  (value_ptr :pointer))

(export '#.(swig-lispify "pthread_join" 'function))

(defcfun ("pthread_kill" #.(swig-lispify "pthread_kill" 'function)) :int
  (thread pthread)
  (sig :int))

(export '#.(swig-lispify "pthread_kill" 'function))

(defcfun ("pthread_once" #.(swig-lispify "pthread_once" 'function)) :int
  (once_control :pointer)
  (init_routine :pointer))

(export '#.(swig-lispify "pthread_once" 'function))

(defcfun ("pthread_self" #.(swig-lispify "pthread_self" 'function)) pthread)

(export '#.(swig-lispify "pthread_self" 'function))

(defcfun ("pthread_setcancelstate" #.(swig-lispify "pthread_setcancelstate" 'function)) :int
  (state :int)
  (oldstate :pointer))

(export '#.(swig-lispify "pthread_setcancelstate" 'function))

(defcfun ("pthread_setcanceltype" #.(swig-lispify "pthread_setcanceltype" 'function)) :int
  (type :int)
  (oldtype :pointer))

(export '#.(swig-lispify "pthread_setcanceltype" 'function))

(defcfun ("pthread_testcancel" #.(swig-lispify "pthread_testcancel" 'function)) :void)

(export '#.(swig-lispify "pthread_testcancel" 'function))

(defcfun ("pthread_yield" #.(swig-lispify "pthread_yield" 'function)) :void)

(export '#.(swig-lispify "pthread_yield" 'function))

(defcfun ("pthread_attr_destroy" #.(swig-lispify "pthread_attr_destroy" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_attr_destroy" 'function))

(defcfun ("pthread_attr_getinheritsched" #.(swig-lispify "pthread_attr_getinheritsched" 'function)) :int
  (attr :pointer)
  (inheritsched :pointer))

(export '#.(swig-lispify "pthread_attr_getinheritsched" 'function))

(defcfun ("pthread_attr_getschedparam" #.(swig-lispify "pthread_attr_getschedparam" 'function)) :int
  (attr :pointer)
  (param :pointer))

(export '#.(swig-lispify "pthread_attr_getschedparam" 'function))

(defcfun ("pthread_attr_getschedpolicy" #.(swig-lispify "pthread_attr_getschedpolicy" 'function)) :int
  (attr :pointer)
  (policy :pointer))

(export '#.(swig-lispify "pthread_attr_getschedpolicy" 'function))

(defcfun ("pthread_attr_getscope" #.(swig-lispify "pthread_attr_getscope" 'function)) :int
  (attr :pointer)
  (contentionscope :pointer))

(export '#.(swig-lispify "pthread_attr_getscope" 'function))

(defcfun ("pthread_attr_getstacksize" #.(swig-lispify "pthread_attr_getstacksize" 'function)) :int
  (attr :pointer)
  (stacksize :pointer))

(export '#.(swig-lispify "pthread_attr_getstacksize" 'function))

(defcfun ("pthread_attr_getstackaddr" #.(swig-lispify "pthread_attr_getstackaddr" 'function)) :int
  (attr :pointer)
  (stackaddr :pointer))

(export '#.(swig-lispify "pthread_attr_getstackaddr" 'function))

(defcfun ("pthread_attr_getdetachstate" #.(swig-lispify "pthread_attr_getdetachstate" 'function)) :int
  (attr :pointer)
  (detachstate :pointer))

(export '#.(swig-lispify "pthread_attr_getdetachstate" 'function))

(defcfun ("pthread_attr_init" #.(swig-lispify "pthread_attr_init" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_attr_init" 'function))

(defcfun ("pthread_attr_setinheritsched" #.(swig-lispify "pthread_attr_setinheritsched" 'function)) :int
  (attr :pointer)
  (inheritsched :int))

(export '#.(swig-lispify "pthread_attr_setinheritsched" 'function))

(defcfun ("pthread_attr_setschedparam" #.(swig-lispify "pthread_attr_setschedparam" 'function)) :int
  (attr :pointer)
  (param :pointer))

(export '#.(swig-lispify "pthread_attr_setschedparam" 'function))

(defcfun ("pthread_attr_setschedpolicy" #.(swig-lispify "pthread_attr_setschedpolicy" 'function)) :int
  (attr :pointer)
  (policy :int))

(export '#.(swig-lispify "pthread_attr_setschedpolicy" 'function))

(defcfun ("pthread_attr_setscope" #.(swig-lispify "pthread_attr_setscope" 'function)) :int
  (attr :pointer)
  (contentionscope :int))

(export '#.(swig-lispify "pthread_attr_setscope" 'function))

(defcfun ("pthread_attr_setstacksize" #.(swig-lispify "pthread_attr_setstacksize" 'function)) :int
  (attr :pointer)
  (stacksize :pointer))

(export '#.(swig-lispify "pthread_attr_setstacksize" 'function))

(defcfun ("pthread_attr_setstackaddr" #.(swig-lispify "pthread_attr_setstackaddr" 'function)) :int
  (attr :pointer)
  (stackaddr :pointer))

(export '#.(swig-lispify "pthread_attr_setstackaddr" 'function))

(defcfun ("pthread_attr_setdetachstate" #.(swig-lispify "pthread_attr_setdetachstate" 'function)) :int
  (attr :pointer)
  (detachstate :int))

(export '#.(swig-lispify "pthread_attr_setdetachstate" 'function))

(defcfun ("pthread_mutexattr_destroy" #.(swig-lispify "pthread_mutexattr_destroy" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_mutexattr_destroy" 'function))

(defcfun ("pthread_mutexattr_getprioceiling" #.(swig-lispify "pthread_mutexattr_getprioceiling" 'function)) :int
  (attr :pointer)
  (ceiling :pointer))

(export '#.(swig-lispify "pthread_mutexattr_getprioceiling" 'function))

(defcfun ("pthread_mutexattr_getprotocol" #.(swig-lispify "pthread_mutexattr_getprotocol" 'function)) :int
  (attr :pointer)
  (protocol :pointer))

(export '#.(swig-lispify "pthread_mutexattr_getprotocol" 'function))

(defcfun ("pthread_mutexattr_gettype" #.(swig-lispify "pthread_mutexattr_gettype" 'function)) :int
  (attr :pointer)
  (type :pointer))

(export '#.(swig-lispify "pthread_mutexattr_gettype" 'function))

(defcfun ("pthread_mutexattr_init" #.(swig-lispify "pthread_mutexattr_init" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_mutexattr_init" 'function))

(defcfun ("pthread_mutexattr_setprioceiling" #.(swig-lispify "pthread_mutexattr_setprioceiling" 'function)) :int
  (attr :pointer)
  (ceiling :int))

(export '#.(swig-lispify "pthread_mutexattr_setprioceiling" 'function))

(defcfun ("pthread_mutexattr_setprotocol" #.(swig-lispify "pthread_mutexattr_setprotocol" 'function)) :int
  (attr :pointer)
  (protocol :int))

(export '#.(swig-lispify "pthread_mutexattr_setprotocol" 'function))

(defcfun ("pthread_mutexattr_settype" #.(swig-lispify "pthread_mutexattr_settype" 'function)) :int
  (attr :pointer)
  (type :int))

(export '#.(swig-lispify "pthread_mutexattr_settype" 'function))

(defcfun ("pthread_mutex_destroy" #.(swig-lispify "pthread_mutex_destroy" 'function)) :int
  (mutex :pointer))

(export '#.(swig-lispify "pthread_mutex_destroy" 'function))

(defcfun ("pthread_mutex_init" #.(swig-lispify "pthread_mutex_init" 'function)) :int
  (mutex :pointer)
  (attr :pointer))

(export '#.(swig-lispify "pthread_mutex_init" 'function))

(defcfun ("pthread_mutex_lock" #.(swig-lispify "pthread_mutex_lock" 'function)) :int
  (mutex :pointer))

(export '#.(swig-lispify "pthread_mutex_lock" 'function))

(defcfun ("pthread_mutex_trylock" #.(swig-lispify "pthread_mutex_trylock" 'function)) :int
  (mutex :pointer))

(export '#.(swig-lispify "pthread_mutex_trylock" 'function))

(defcfun ("pthread_mutex_unlock" #.(swig-lispify "pthread_mutex_unlock" 'function)) :int
  (mutex :pointer))

(export '#.(swig-lispify "pthread_mutex_unlock" 'function))

(defcfun ("pthread_condattr_destroy" #.(swig-lispify "pthread_condattr_destroy" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_condattr_destroy" 'function))

(defcfun ("pthread_condattr_init" #.(swig-lispify "pthread_condattr_init" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_condattr_init" 'function))

(defcfun ("pthread_cond_broadcast" #.(swig-lispify "pthread_cond_broadcast" 'function)) :int
  (cond :pointer))

(export '#.(swig-lispify "pthread_cond_broadcast" 'function))

(defcfun ("pthread_cond_destroy" #.(swig-lispify "pthread_cond_destroy" 'function)) :int
  (cond :pointer))

(export '#.(swig-lispify "pthread_cond_destroy" 'function))

(defcfun ("pthread_cond_init" #.(swig-lispify "pthread_cond_init" 'function)) :int
  (cond :pointer)
  (attr :pointer))

(export '#.(swig-lispify "pthread_cond_init" 'function))

(defcfun ("pthread_cond_signal" #.(swig-lispify "pthread_cond_signal" 'function)) :int
  (cond :pointer))

(export '#.(swig-lispify "pthread_cond_signal" 'function))

(defcfun ("pthread_cond_timedwait" #.(swig-lispify "pthread_cond_timedwait" 'function)) :int
  (cond :pointer)
  (mutex :pointer)
  (abstime :pointer))

(export '#.(swig-lispify "pthread_cond_timedwait" 'function))

(defcfun ("pthread_cond_wait" #.(swig-lispify "pthread_cond_wait" 'function)) :int
  (arg0 :pointer)
  (mutex :pointer))

(export '#.(swig-lispify "pthread_cond_wait" 'function))

(defcfun ("pthread_rwlock_destroy" #.(swig-lispify "pthread_rwlock_destroy" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_destroy" 'function))

(defcfun ("pthread_rwlock_init" #.(swig-lispify "pthread_rwlock_init" 'function)) :int
  (lock :pointer)
  (attr :pointer))

(export '#.(swig-lispify "pthread_rwlock_init" 'function))

(defcfun ("pthread_rwlock_rdlock" #.(swig-lispify "pthread_rwlock_rdlock" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_rdlock" 'function))

(defcfun ("pthread_rwlock_tryrdlock" #.(swig-lispify "pthread_rwlock_tryrdlock" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_tryrdlock" 'function))

(defcfun ("pthread_rwlock_trywrlock" #.(swig-lispify "pthread_rwlock_trywrlock" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_trywrlock" 'function))

(defcfun ("pthread_rwlock_unlock" #.(swig-lispify "pthread_rwlock_unlock" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_unlock" 'function))

(defcfun ("pthread_rwlock_wrlock" #.(swig-lispify "pthread_rwlock_wrlock" 'function)) :int
  (lock :pointer))

(export '#.(swig-lispify "pthread_rwlock_wrlock" 'function))

(defcfun ("pthread_rwlockattr_destroy" #.(swig-lispify "pthread_rwlockattr_destroy" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_rwlockattr_destroy" 'function))

(defcfun ("pthread_rwlockattr_getpshared" #.(swig-lispify "pthread_rwlockattr_getpshared" 'function)) :int
  (attr :pointer)
  (pshared :pointer))

(export '#.(swig-lispify "pthread_rwlockattr_getpshared" 'function))

(defcfun ("pthread_rwlockattr_init" #.(swig-lispify "pthread_rwlockattr_init" 'function)) :int
  (attr :pointer))

(export '#.(swig-lispify "pthread_rwlockattr_init" 'function))

(defcfun ("pthread_rwlockattr_setpshared" #.(swig-lispify "pthread_rwlockattr_setpshared" 'function)) :int
  (attr :pointer)
  (pshared :int))

(export '#.(swig-lispify "pthread_rwlockattr_setpshared" 'function))

(defcfun ("pthread_key_create" #.(swig-lispify "pthread_key_create" 'function)) :int
  (key :pointer)
  (routine :pointer))

(export '#.(swig-lispify "pthread_key_create" 'function))

(defcfun ("pthread_key_delete" #.(swig-lispify "pthread_key_delete" 'function)) :int
  (key pthread-key))

(export '#.(swig-lispify "pthread_key_delete" 'function))

(defcfun ("pthread_getspecific" #.(swig-lispify "pthread_getspecific" 'function)) :pointer
  (key pthread-key))

(export '#.(swig-lispify "pthread_getspecific" 'function))

(defcfun ("pthread_setspecific" #.(swig-lispify "pthread_setspecific" 'function)) :int
  (key pthread-key)
  (value_ptr :pointer))

(export '#.(swig-lispify "pthread_setspecific" 'function))

(defcfun ("pthread_cleanup_pop" #.(swig-lispify "pthread_cleanup_pop" 'function)) :void
  (execute :int))

(export '#.(swig-lispify "pthread_cleanup_pop" 'function))

(defcfun ("pthread_cleanup_push" #.(swig-lispify "pthread_cleanup_push" 'function)) :void
  (routine :pointer)
  (routine_arg :pointer))

(export '#.(swig-lispify "pthread_cleanup_push" 'function))


